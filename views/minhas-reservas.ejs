<!DOCTYPE html>
<html>
<head>
    <title>Minhas Reservas - Sistema de Reservas</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        .page-header {
            background: linear-gradient(135deg, var(--primary-color) 0%, var(--secondary-color) 100%);
            color: white;
            padding: 2rem;
            border-radius: 15px;
            margin-bottom: 2rem;
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
        }

        .filters-section {
            background: white;
            border-radius: 15px;
            padding: 1.5rem;
            margin-bottom: 2rem;
            box-shadow: 0 2px 15px rgba(0,0,0,0.05);
        }

        .reservas-table {
            background: white;
            border-radius: 15px;
            padding: 1.5rem;
            box-shadow: 0 2px 15px rgba(0,0,0,0.05);
        }

        .table {
            margin-bottom: 0;
        }

        .table th {
            border-top: none;
            font-weight: 600;
            color: #495057;
        }

        .table td {
            vertical-align: middle;
        }

        .status-badge {
            padding: 0.5rem 1rem;
            border-radius: 8px;
            font-weight: 500;
        }

        .status-badge.pendente {
            background: rgba(255,193,7,0.1);
            color: #ffc107;
        }

        .status-badge.confirmada {
            background: rgba(40,167,69,0.1);
            color: #28a745;
        }

        .status-badge.cancelada {
            background: rgba(220,53,69,0.1);
            color: #dc3545;
        }

        .btn-action {
            padding: 0.5rem 1rem;
            border-radius: 8px;
            font-weight: 500;
            transition: all 0.3s ease;
        }

        .btn-action:hover {
            transform: translateY(-2px);
        }

        .btn-action i {
            margin-right: 0.5rem;
        }

        .modal-content {
            border-radius: 15px;
            border: none;
        }

        .modal-header {
            background: linear-gradient(135deg, var(--primary-color) 0%, var(--secondary-color) 100%);
            color: white;
            border-radius: 15px 15px 0 0;
        }

        .modal-body {
            padding: 2rem;
        }

        .detail-item {
            margin-bottom: 1.5rem;
        }

        .detail-label {
            font-weight: 600;
            color: #495057;
            margin-bottom: 0.5rem;
        }

        .detail-value {
            color: #6c757d;
        }

        .empty-state {
            text-align: center;
            padding: 3rem;
            color: #6c757d;
        }

        .empty-state i {
            font-size: 3rem;
            margin-bottom: 1rem;
            color: #dee2e6;
        }

        .date-filter {
            position: relative;
        }

        .date-filter i {
            position: absolute;
            left: 1rem;
            top: 50%;
            transform: translateY(-50%);
            color: #6c757d;
        }

        .date-filter input {
            padding-left: 2.5rem;
        }
    </style>
</head>
<body>
    <div class="container mt-4">
        <div class="page-header">
            <div class="row align-items-center">
                <div class="col">
                    <h2 class="mb-0">Minhas Reservas</h2>
                </div>
                <div class="col-auto">
                    <a href="/nova-reserva" class="btn btn-light">
                        <i class="fas fa-plus me-2"></i>Nova Reserva
                    </a>
                </div>
            </div>
        </div>

        <div class="filters-section">
            <div class="row g-3">
                <div class="col-md-4">
                    <div class="date-filter">
                        <i class="fas fa-calendar"></i>
                        <input type="date" class="form-control" id="dataInicio" placeholder="Data Início">
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="date-filter">
                        <i class="fas fa-calendar"></i>
                        <input type="date" class="form-control" id="dataFim" placeholder="Data Fim">
                    </div>
                </div>
                <div class="col-md-4">
                    <select class="form-select" id="statusFilter">
                        <option value="">Todos os Status</option>
                        <option value="pendente">Pendente</option>
                        <option value="confirmada">Confirmada</option>
                        <option value="cancelada">Cancelada</option>
                    </select>
                </div>
            </div>
        </div>

        <div class="reservas-table">
            <div class="table-responsive">
                <table class="table">
                    <thead>
                        <tr>
                            <th>Sala</th>
                            <th>Data Início</th>
                            <th>Data Fim</th>
                            <th>Motivo</th>
                            <th>Status</th>
                            <th>Ações</th>
                        </tr>
                    </thead>
                    <tbody id="listaReservas">
                        <!-- Reservas serão inseridas aqui via JavaScript -->
                    </tbody>
                </table>
            </div>
            <div id="emptyState" class="empty-state" style="display: none;">
                <i class="fas fa-calendar-times"></i>
                <h4>Nenhuma reserva encontrada</h4>
                <p>Você ainda não possui reservas ou não há reservas que correspondam aos filtros selecionados.</p>
            </div>
        </div>
    </div>

    <!-- Modal para visualizar detalhes da reserva -->
    <div class="modal fade" id="modalReserva" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Detalhes da Reserva</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="detail-item">
                        <div class="detail-label">Sala</div>
                        <div class="detail-value" id="detalheSala"></div>
                    </div>
                    <div class="detail-item">
                        <div class="detail-label">Data Início</div>
                        <div class="detail-value" id="detalheDataInicio"></div>
                    </div>
                    <div class="detail-item">
                        <div class="detail-label">Data Fim</div>
                        <div class="detail-value" id="detalheDataFim"></div>
                    </div>
                    <div class="detail-item">
                        <div class="detail-label">Motivo</div>
                        <div class="detail-value" id="detalheMotivo"></div>
                    </div>
                    <div class="detail-item">
                        <div class="detail-label">Status</div>
                        <div class="detail-value">
                            <span id="detalheStatus" class="status-badge"></span>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Fechar</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal para Feedback -->
    <div class="modal fade" id="modalFeedback" tabindex="-1" aria-labelledby="modalFeedbackLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="modalFeedbackLabel">Enviar Feedback da Sala</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="formFeedback">
                        <input type="hidden" id="feedbackReservaId" name="reserva_id">
                        <div class="mb-3">
                            <label for="avaliacao" class="form-label">Avaliação (1 a 5 estrelas)</label>
                            <input type="number" class="form-control" id="avaliacao" name="avaliacao" min="1" max="5" required>
                        </div>
                        <div class="mb-3">
                            <label for="comentario" class="form-label">Comentário</label>
                            <textarea class="form-control" id="comentario" name="comentario" rows="3"></textarea>
                        </div>
                        <button type="submit" class="btn btn-primary">Enviar Feedback</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Verificar autenticação
        const token = localStorage.getItem('token');
        const userType = localStorage.getItem('userType');

        if (!token) {
            window.location.href = '/login';
        }

        // Função para formatar a data
        function formatarDataHora(dataHora) {
            const options = { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' };
            return new Date(dataHora).toLocaleDateString('pt-BR', options);
        }

        // Função para carregar as reservas
        async function carregarReservas() {
            const dataInicio = document.getElementById('dataInicio').value;
            const dataFim = document.getElementById('dataFim').value;
            const statusFilter = document.getElementById('statusFilter').value;

            let url = '/api/reservas/minhas';
            const params = [];

            if (dataInicio) {
                params.push(`data_inicio=${dataInicio}`);
            }
            if (dataFim) {
                params.push(`data_fim=${dataFim}`);
            }
            if (statusFilter) {
                params.push(`status=${statusFilter}`);
            }

            if (params.length > 0) {
                url += `?${params.join('&')}`;
            }

            try {
                const response = await fetch(url, {
                    headers: {
                        'Authorization': `Bearer ${token}`
                    }
                });
                const reservas = await response.json();

                const listaReservas = document.getElementById('listaReservas');
                listaReservas.innerHTML = '';

                if (reservas.length === 0) {
                    document.getElementById('emptyState').style.display = 'block';
                    return;
                } else {
                    document.getElementById('emptyState').style.display = 'none';
                }

                reservas.forEach(reserva => {
                    const row = listaReservas.insertRow();
                    row.insertCell(0).textContent = reserva.sala_nome;
                    row.insertCell(1).textContent = formatarDataHora(reserva.data_inicio);
                    row.insertCell(2).textContent = formatarDataHora(reserva.data_fim);
                    row.insertCell(3).textContent = reserva.motivo;

                    const statusCell = row.insertCell(4);
                    const statusBadge = document.createElement('span');
                    statusBadge.className = `status-badge ${reserva.status}`;
                    statusBadge.textContent = reserva.status.charAt(0).toUpperCase() + reserva.status.slice(1);
                    statusCell.appendChild(statusBadge);

                    const actionsCell = row.insertCell(5);
                    const btnDetalhes = document.createElement('button');
                    btnDetalhes.className = 'btn btn-info btn-action me-2';
                    btnDetalhes.innerHTML = '<i class="fas fa-info-circle"></i>Detalhes';
                    btnDetalhes.onclick = () => mostrarDetalhesReserva(reserva);
                    actionsCell.appendChild(btnDetalhes);

                    const dataFimReserva = new Date(reserva.data_fim);
                    const agora = new Date();

                    // Adicionar botão de Cancelar apenas para reservas futuras ou pendentes/confirmadas
                    if (reserva.status !== 'cancelada' && dataFimReserva > agora) {
                        const btnCancelar = document.createElement('button');
                        btnCancelar.className = 'btn btn-danger btn-action';
                        btnCancelar.innerHTML = '<i class="fas fa-times-circle"></i>Cancelar';
                        btnCancelar.onclick = () => cancelarReserva(reserva.id);
                        actionsCell.appendChild(btnCancelar);
                    }

                    // Adicionar botão de Feedback apenas para reservas concluídas e se o feedback ainda não foi enviado
                    if (reserva.status === 'confirmada' && dataFimReserva < agora && !reserva.feedback_enviado) {
                        const btnFeedback = document.createElement('button');
                        btnFeedback.className = 'btn btn-success btn-action ms-2'; // Adicionar um pequeno espaço
                        btnFeedback.innerHTML = '<i class="fas fa-comment"></i>Feedback';
                        btnFeedback.onclick = () => abrirModalFeedback(reserva.id);
                        actionsCell.appendChild(btnFeedback);
                    }
                });

            } catch (error) {
                console.error('Erro ao carregar reservas:', error);
                alert('Erro ao carregar suas reservas. Por favor, tente novamente.');
            }
        }

        // Função para mostrar detalhes da reserva (já existente)
        function mostrarDetalhesReserva(reserva) {
            document.getElementById('detalheSala').textContent = reserva.sala_nome;
            document.getElementById('detalheDataInicio').textContent = formatarDataHora(reserva.data_inicio);
            document.getElementById('detalheDataFim').textContent = formatarDataHora(reserva.data_fim);
            document.getElementById('detalheMotivo').textContent = reserva.motivo;
            const statusBadge = document.getElementById('detalheStatus');
            statusBadge.className = `status-badge ${reserva.status}`;
            statusBadge.textContent = reserva.status.charAt(0).toUpperCase() + reserva.status.slice(1);
            
            const modal = new bootstrap.Modal(document.getElementById('modalReserva'));
            modal.show();
        }

        // Função para cancelar reserva (já existente)
        async function cancelarReserva(reservaId) {
            if (!confirm('Tem certeza que deseja cancelar esta reserva?')) {
                return;
            }

            try {
                const response = await fetch(`/api/reservas/${reservaId}/cancelar`, {
                    method: 'PUT',
                    headers: {
                        'Authorization': `Bearer ${token}`,
                        'Content-Type': 'application/json'
                    }
                });

                if (!response.ok) {
                    const error = await response.json();
                    throw new Error(error.error || 'Erro ao cancelar reserva');
                }

                alert('Reserva cancelada com sucesso!');
                carregarReservas(); // Recarregar a lista de reservas
            } catch (error) {
                console.error('Erro ao cancelar reserva:', error);
                alert(error.message || 'Erro ao cancelar reserva. Por favor, tente novamente.');
            }
        }

        // --- Novas funções para Feedback ---
        let currentReservaIdForFeedback = null; // Variável para armazenar o ID da reserva atual para feedback

        function abrirModalFeedback(reservaId) {
            currentReservaIdForFeedback = reservaId;
            const modalFeedback = new bootstrap.Modal(document.getElementById('modalFeedback'));
            modalFeedback.show();
        }

        async function enviarFeedback(event) {
            event.preventDefault();

            const avaliacao = document.getElementById('avaliacao').value;
            const comentario = document.getElementById('comentario').value;

            if (!currentReservaIdForFeedback) {
                alert('Erro: ID da reserva não encontrado para enviar feedback.');
                return;
            }

            if (avaliacao < 1 || avaliacao > 5) {
                alert('Por favor, insira uma avaliação entre 1 e 5.');
                return;
            }

            try {
                const response = await fetch('/api/feedbacks', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'Authorization': `Bearer ${token}`
                    },
                    body: JSON.stringify({
                        reserva_id: currentReservaIdForFeedback,
                        avaliacao: parseInt(avaliacao),
                        comentario: comentario
                    })
                });

                const responseData = await response.json();

                if (!response.ok) {
                    throw new Error(responseData.error || 'Erro ao enviar feedback');
                }

                alert('Feedback enviado com sucesso!');
                // Fechar o modal
                const modalFeedback = bootstrap.Modal.getInstance(document.getElementById('modalFeedback'));
                if (modalFeedback) {
                    modalFeedback.hide();
                }
                // Resetar o formulário
                document.getElementById('formFeedback').reset();
                // Recarregar as reservas para atualizar o estado do botão de feedback
                carregarReservas();

            } catch (error) {
                console.error('Erro ao enviar feedback:', error);
                alert(error.message || 'Erro ao enviar feedback. Por favor, tente novamente.');
            }
        }

        // Adicionar evento de submit ao formulário de feedback
        document.getElementById('formFeedback').addEventListener('submit', enviarFeedback);

        // Adicionar eventos de filtro
        document.getElementById('dataInicio').addEventListener('change', carregarReservas);
        document.getElementById('dataFim').addEventListener('change', carregarReservas);
        document.getElementById('statusFilter').addEventListener('change', carregarReservas);

        // Carregar reservas ao iniciar
        carregarReservas();

        // Logout (função já existente, garantir que o token seja removido)
        function logout() {
            localStorage.removeItem('token');
            localStorage.removeItem('userType');
            localStorage.removeItem('userName');
            window.location.href = '/login';
        }
    </script>
</body>
</html> 